<ui:composition lang="en" xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui">

	<!-- <h:outputStylesheet library="defaultjhu" name="/css/main.css" /> -->

	<!-- 	<h:outputStylesheet library="defaultjhu" name="css/leads.css" />
	<h:outputStylesheet library="defaultjhu" name="css/singlelead.css" />
	<h:outputStylesheet library="defaultjhu" name="css/index_main.css" />

	<h:outputScript library="defaultjhu" name="js/dygraph-combined.js" />
	<h:outputScript library="defaultjhu" name="js/crosshair.js" />
	<h:outputScript library="defaultjhu" name="js/annotation.js" />
 -->
	<!--	<h:outputScript library="defaultjhu" name="js/formatting.js" />-->
	<!-- 
	<h:outputScript library="defaultjhu" name="js/ontologyTreeAPI.js" />
	<h:outputScript library="defaultjhu" name="js/interval_new.js" />
 -->

	<h:form id="drawGraph_loadAnnotations">
		<!-- # action=" { annotationBacking getLeadnameFromRender}  " onstart="onStartSendLeadName();"   -->
		<!-- document.getElementById('singleLeadMenuHeader').header='Lead:'+parent.CVRG_getLeadNum(); -->
		<p:remoteCommand name="calledOnLoad"
			onstart="alert('singleLeadFragmentLoaded');setLeadNameOneSelection();CVRG_drawECGgraphSingle();"
			autoRun="true"
			actionListener="#{annotationBacking.leadOnloadCallback}">
		</p:remoteCommand>
		<!--			oncomplete="DynamicTextonload()"-->
	</h:form>
	<!-- HIDDEN FIELDS TO SEND THE LEAD NAME TO BACKING BEAN START Send Lead Name TO Backing Bean -->
	<h:panelGroup id="HiddenLeadNameStuff" layout="block"
		style="display:none; position:relitive;
				 background-color:333; height:50px; width:100px; 
				 left:100px;">
		<!-- START Send Lead Name TO Backing Bean -->
		<script>
						var setLeadNameOneSelection = function() {
							// Lead Name send to the input to submit to the backing bean
							$(".leadNamesendDOM2Graph").text(leadName);
							$(".leadNameDOM2Graph").val(leadName);
	
							// Lead Num send to the input to submit to the backing bean
							$(".leadNumsendDOM2Graph").text(leadNum);
							$(".leadNumDOM2Graph").val(leadNum);
							setLeadName();
							
						}
					</script>
		<!-- HIDDEN FIELDS to capture -->
		<h:form id="formLeadName">
			<h:outputText id="leadNameGraph" class="leadNamesendDOM2Graph"
				value="#{annotationBacking.leadName}" style="display:none" />
			<h:inputText id="leadNamesendGraph" class="leadNameDOM2Graph"
				value="#{annotationBacking.leadName}" style="display:none">
				<p:ajax update="leadNameGraph" event="keyup" />
			</h:inputText>

			<h:outputText id="leadNumGraph" class="leadNumsendDOM2Graph"
				value="#{annotationBacking.leadnum}" style="display:none;" />
			<h:inputText id="leadNumsendGraph" class="leadNumDOM2Graph"
				value="#{annotationBacking.leadnum}" style="display:none;">
				<p:ajax update="leadNumGraph" event="keyup" />
			</h:inputText>

			<p:remoteCommand name="setLeadName"
				action="#{annotationBacking.showAnnotationForLead}" />

		</h:form>
	</h:panelGroup>
	<!-- END Send Lead Name TO Backing Bean -->

	<!-- IncludeAnnoate.xhtml Dropdown  -->
	<ui:insert name="AnnotateInsert">
		<!-- <ui:include src="include/annotate.xhtml" /> -->
	</ui:insert>

	<h:form id="menubarSingleLead">
		<p:menubar id="singleLeadMenuHeader"
			header="Lead: #{annotationBacking.leadName}"
			value="Lead: #{annotationBacking.leadName}" autoDisplay="true">
			<!--   //same content as default menubar      -->
			<p:menuitem value="12 lead"
				onclick="graphContainerDiv.innerHTML='Please wait while the graph is loading.';"
				icon="ui-icon-close" actionListener="#{visualizeBacking.viewLeads}"
				ajax="true" title="View the 12 lead page." update=":visualizeViews" />
			<p:menuitem value="Help" onclick="bottomBar.show()"
				icon="ui-icon-help" />
			<p:menuitem value="Annotation" onclick="annotationBar.show()"
				icon="ui-button-icon-left ui-icon ui-c ui-icon-flag" />
			<!-- Start Text  -->
		</p:menubar>
	</h:form>

	<h:panelGroup layout="block" id="TopLeadText"
		styleClass="leadNamePositionTop">
		<h:outputLabel id="topText"
			value="Lead: #{annotationBacking.leadName}"
			style="font-size:11pt; font-color:#000; font-family:helvetica;" />
	</h:panelGroup>


	<p:panel id="graphContainerDiv">
		<!-- START LEAD VISULAZATION  -->
		<h:panelGroup id="ecgSingle_div" layout="block">
		</h:panelGroup>
		<!-- Start Time Text  -->
		<h:panelGroup layout="block" id="timeLabelPrefixName"
			class="bottomLabelText"></h:panelGroup>

		<p:panel id="dragPanelInstructions" closeTitle="true"
			header="Details (Drag to Move)" footer="Click Waveform to Annotate">
			<h:panelGroup layout="block" id="status_div" styleClass="leadStatus"></h:panelGroup>
		</p:panel>
		<p:draggable for="dragPanelInstructions" handle=".ui-panel-titlebar" />
		<p:resizable for="dragPanelInstructions" handles="e,w,n,se,sw,ne,nw" />

		<!-- Start Pan and Zoom Buttons  -->
		<!--		<ui:include src="include/panZoom.xhtml" />-->

		<!-- End Pan and Zoom Buttons  -->

		<!-- Time range slider  -->
		<h:panelGroup id="sliderTimeRangeSingleDiv" layout="block">
			<!--			<h:panelGrid columns="1" style="margin-bottom:10px">-->
			<h:inputHidden id="timeMinInput" value="0" immediate="true" />
			<h:inputHidden id="timeMaxInput" value="100" immediate="true" />
			<p:slider for="timeMinInput, timeMaxInput" type="horizontal"
				range="true" onSlideEnd="zoomTime()" />
			<!--			</h:panelGrid>-->
		</h:panelGroup>

		<!-- Voltage pan and zoom sliders -->
		<h:panelGroup layout="block" id="sliderVoltRangeContainerDiv">
			<h:inputHidden id="voltMinInput" value="1" immediate="true" />
			<h:inputHidden id="voltMaxInput" value="100" immediate="true" />
			<h:inputHidden id="voltCenterInput" value="0" immediate="true" />

			<p:slider id="sliderVoltRangeSingle" for="voltMinInput, voltMaxInput"
				type="vertical" range="true" minValue="1" onSlideEnd="zoomVoltage()" />

			<p:slider id="sliderVoltCenterSingle" for="voltCenterInput"
				type="vertical" minValue="-50" maxValue="50"
				onSlideEnd="zoomVoltage()" />

			<p:button id="voltCenterButton" value="center" type="button"
				onclick="centerVoltage();return false;"></p:button>
		</h:panelGroup>

	</p:panel>
	<h:outputScript library="defaultjhu" name="js/singleLead.js" />
</ui:composition>